name: Deploy Chatbot to ECS and S3

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # BACKEND --------------------------------
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.ECR_BACKEND_REPO }} ./backend
          docker push ${{ secrets.ECR_BACKEND_REPO }}

      - name: Register new ECS task definition revision
        id: register-task
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ secrets.ECS_TASK_DEFINITION }} > task-def.json

          IMAGE="${{ secrets.ECR_BACKEND_REPO }}:latest"

          NEW_TASK_DEF=$(jq --arg IMAGE "$IMAGE" '
            .taskDefinition |
            {
              family,
              networkMode,
              requiresCompatibilities,
              cpu,
              memory,
              containerDefinitions: [.containerDefinitions[0] | .image = $IMAGE]
            } +
            if .executionRoleArn != null then {executionRoleArn} else {} end +
            if .taskRoleArn != null then {taskRoleArn} else {} end
          ' task-def.json)

          echo "$NEW_TASK_DEF" > new-task-def.json

          TASK_REVISION=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            | jq -r '.taskDefinition.taskDefinitionArn')

          echo "TASK_REVISION=$TASK_REVISION" >> $GITHUB_ENV

      - name: Update ECS service with new task definition
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_SERVICE }} \
            --task-definition ${{ env.TASK_REVISION }}

      # FRONTEND --------------------------------
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Upload frontend to S3
        run: |
          aws s3 sync ./frontend/build s3://${{ secrets.S3_BUCKET_NAME }} --delete
